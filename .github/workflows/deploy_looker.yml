# Name for the GitHub Action, visible in the "Actions" tab
name: Deploy Looker to Production

# Trigger this workflow on any push to the master branch
on:
  push:
    branches:
      - main
#commit
# Define the jobs to run
jobs:
  deploy-to-production:
    # Use the latest version of Ubuntu as the runner environment
    runs-on: ubuntu-latest
    steps:
      # Step 1: Get an authentication token from the Looker API
      - name: Authenticate with Looker
        id: login
        run: |
          # Use curl to post credentials and get a temporary access token
          ACCESS_TOKEN_RESPONSE=$(curl -s -X POST \
            "${{ secrets.LOOKER_BASE_URL }}/api/4.0/login" \
            -d "client_id=${{ secrets.LOOKER_CLIENT_ID }}" \
            -d "client_secret=${{ secrets.LOOKER_CLIENT_SECRET }}")

          # Extract the access_token from the JSON response and set it as an output variable
          ACCESS_TOKEN=$(echo $ACCESS_TOKEN_RESPONSE | jq -r .access_token)
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      # Step 2: Trigger the deployment to production using the token
      - name: Deploy to Production
        run: |
          # Use curl again, this time with the Bearer token for authorization
          # The -v flag gives verbose output for easier debugging in the Actions log
          curl -v -X POST \
            "${{ secrets.LOOKER_BASE_URL }}/api/4.0/projects/pranjal_looker_cxapp/deploy_to_production" \
            -H "Authorization: Bearer ${{ steps.login.outputs.access_token }}"
